{"version":3,"file":"static/js/670.c0c1a7c2.chunk.js","mappings":"8LAEaA,E,OAAYC,EAAAA,IAAH,0E,SCWtB,EAVe,WACb,OACI,UAACD,EAAD,YACI,uDACJ,SAAC,KAAD,MAIL,C,6HCXD,aAAO,OAAP,oBAAO,WAA+BE,GAA/B,+EACO,mCACNC,EAFD,6CAE6CD,GAF7C,SAKkBE,MAAM,GAAD,OAAID,EAAJ,oBAJhB,mCAIgB,oBALvB,YAKCE,EALD,QAMQC,GANR,gCAOUD,EAASE,OAPnB,wEAUEC,QAAQC,OAAO,IAAIC,MAAJ,oBAVjB,mE,0CCEMC,EAAYV,EAAAA,EAAAA,IAAH,uQAaTW,EAAeX,EAAAA,EAAAA,IAAH,4CAIZY,EAAcZ,EAAAA,EAAAA,IAAH,uFAOXa,EAAab,EAAAA,EAAAA,GAAH,yFAMVc,EAAoBd,EAAAA,EAAAA,GAAH,6CAGjBe,EAAcf,EAAAA,EAAAA,EAAH,2FAMXgB,EAAgBhB,EAAAA,EAAAA,EAAH,8FAMbiB,EAAejB,EAAAA,EAAAA,EAAH,2F,SCpCZkB,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,OAAQC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,aAE1C,OACI,UAACd,EAAD,YACI,SAACE,EAAD,CACIa,IAAKL,EAAW,0CAAsCA,GAAgB,YACtEM,IAAKL,KAET,UAACV,EAAD,YACI,SAACE,EAAD,UAAaQ,KACb,SAACP,EAAD,2BACA,SAACG,EAAD,UAAeO,EAAaG,QAAQ,MACpC,SAACb,EAAD,wBACA,SAACE,EAAD,UAAgBO,KAChB,SAACT,EAAD,sBACA,SAACC,EAAD,UAAcO,EAAOM,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,aAIjE,E,kBC5BYC,GAAS/B,EAAAA,EAAAA,GAAOgC,EAAAA,GAAPhC,CAAH,scAsBNiC,GAAOjC,EAAAA,EAAAA,GAAOgC,EAAAA,GAAPhC,CAAH,8iBCoBjB,EApCqB,WAAO,IAAD,YACzB,GAAwCkC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQrC,GAAYsC,EAAAA,EAAAA,MAAZtC,QACFuC,GAAWC,EAAAA,EAAAA,MAef,OAXFC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GJnBV,SAAP,kCIoBIK,CAAgBC,OAAO3C,IACpB4C,KAAKT,GACLU,OAAM,SAAAC,GACLxC,QAAQC,OAAO,IAAIC,MAAJ,UAAasC,EAAMC,UACnC,IACAC,QAAQX,GAAa,GACrB,GAAE,CAACrC,KAIJ,gCACGoC,IAAa,SAACa,EAAA,EAAD,IACbf,IAAgB,SAACJ,EAAD,CAAQoB,GAAE,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUY,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAArC,qBAChBlB,IAAgB,SAACjB,EAAD,CAAWC,MAAOgB,KACnC,SAACF,EAAD,CAAMkB,GAAE,OAAUC,MAAO,CAAEC,KAAI,oBAAEb,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAAzD,oBACA,SAACpB,EAAD,CAAMkB,GAAE,UAAaC,MAAO,CAAEC,KAAI,oBAAEb,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAA5D,qBAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACL,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAKT,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.js","services/movieDetailsApi.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n      <LoaderBox>\n          <p>Please wait. Is loading...</p>\n      <ColorRing\n              />\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n\n\n//strokeColor=\"#00b4ff\"\n//        strokeWidth=\"5\"\n//        animationDuration=\"0.75\"\n //       width=\"96\"\n //       visible={true}","export async function getMovieDetails(movieId) {\n  const key = 'f637ff1bcaf74a417438f57fb9f0b1d7';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  \n\n  const response = await fetch(`${url}?api_key=${key}&language=en-US`);\n  if (response.ok) {\n    return await response.json();\n  }\n  \n  return Promise.reject(new Error(`Someting wrong`))\n\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  border-bottom: 2px solid black;\n  justify-content:space-evenly;\n  padding: 20px;\n  border-radius: 4px;\n  margin-right: 20px;\n  margin-left: 20px;\n  background-color: rgb(178, 236, 249);\n  margin-bottom: 20px;\n\n`;\n\nexport const MovieWrapper = styled.div`\n  display: block;\n `;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  width: 300px;\n  margin-right: 20px;\n  \n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 800;\n  margin-bottom: 15px;\n`;\n\nexport const MovieDetailsTitle = styled.h3`\n  font-size: 20px; \n`\nexport const MovieGenres = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  `;\n\nexport const MovieOverview = styled.p`\n  font-size: 18px;\n  margin-bottom: 15px;\n  text-align: justify;\n  `;\n\nexport const MovieAverage = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  `;","import {\n    Container,\n    MoviePoster,\n    MovieWrapper,\n    MovieTitle,\n    MovieDetailsTitle,\n    MovieGenres,\n    MovieOverview,\n    MovieAverage,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\nconst { poster_path, title, genres, overview, vote_average } = movie\n    \n    return (\n        <Container>\n            <MoviePoster\n                src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : \"No poster\"}\n                alt={title}\n            />\n            <MovieWrapper>\n                <MovieTitle>{title}</MovieTitle>\n                <MovieDetailsTitle>User score:</MovieDetailsTitle>\n                <MovieAverage>{vote_average.toFixed(1)}</MovieAverage>\n                <MovieDetailsTitle>Overview</MovieDetailsTitle>\n                <MovieOverview>{overview}</MovieOverview>\n                <MovieDetailsTitle>Genres</MovieDetailsTitle>\n                <MovieGenres>{genres.map(({ name }) => name).join(', ')}</MovieGenres>\n          </MovieWrapper>\n      </Container>\n  );\n}\nexport default MovieCard;","import styled from \"@emotion/styled\";\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBack = styled(NavLink)`\n   display: flex;\n  width: 100px;\n  height: 35px;\n  align-items: center;\n  justify-content: center;\n  background-color: rgb(178, 236, 249);\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n  border: none;\n  border-radius: 10%;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  &:hover,\n  &:focus {\n    color: white;\n    background: linear-gradient(to right, #1488cc, #9d9da2);\n    transform: scale(1.2);\n  } \n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  width: 100px;\n  height: 35px;\n  align-items: center;\n  justify-content: center;\n  background-color: rgb(178, 236, 249);\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n  border: none;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  margin-left: 40px;\n  :hover:not(.active){\n    color: white;\n    background: linear-gradient(to right, #1488cc, #9d9da2);\n    transform: scale(1.2);\n  }\n    &.active {\n    color: white;\n   background: linear-gradient(to right, #1488cc, #9d9da2);\n   \n  } \n`;\n\n","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\n\nimport {getMovieDetails} from \"services/movieDetailsApi\";\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport Loader from 'components/Loader/Loader';\nimport {GoBack , Link, } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const { movieId } = useParams();\n  const location = useLocation();\n  \n\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(Number(movieId))\n      .then(setMovieDetails)\n      .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n      })\n      .finally(setIsLoading(false))\n      }, [movieId]);\n    \n    \n    return (\n      <>\n        {isLoading && <Loader />}\n        {movieDetails && <GoBack to={location?.state?.from ?? '/movies'}>Go Back</GoBack>}\n        {movieDetails && <MovieCard movie={movieDetails} />}\n        <Link to={`cast`} state={{ from: location.state?.from ?? '/' }}> Cast</Link>\n        <Link to={`reviews`} state={{ from: location.state?.from ?? '/' }}>Review</Link>\n      \n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  \n}\n\nexport default MovieDetails;\n    "],"names":["LoaderBox","styled","movieId","url","fetch","response","ok","json","Promise","reject","Error","Container","MovieWrapper","MoviePoster","MovieTitle","MovieDetailsTitle","MovieGenres","MovieOverview","MovieAverage","MovieCard","movie","poster_path","title","genres","overview","vote_average","src","alt","toFixed","map","name","join","GoBack","NavLink","Link","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useParams","location","useLocation","useEffect","getMovieDetails","Number","then","catch","error","message","finally","Loader","to","state","from","Suspense","fallback"],"sourceRoot":""}