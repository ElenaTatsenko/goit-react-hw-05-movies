{"version":3,"file":"static/js/775.46224d5e.chunk.js","mappings":"6OAAA,aAAO,OAAP,oBAAO,WAA+BA,GAA/B,iFACO,mCACNC,EAFD,6CAE6CD,EAF7C,qBAKkBE,MAAM,GAAD,OAAID,EAAJ,oBAJhB,mCAIgB,2BALvB,YAKCE,EALD,QAMQC,GANR,iCAOiBD,EAASE,OAP1B,cAOGC,EAPH,yBASEA,EAAMC,SATR,iCAWEC,QAAQC,OAAO,IAAIC,MAAJ,oBAXjB,mE,4BCEMC,EAAcC,EAAAA,EAAAA,GAAH,wFAMXC,EAAgBD,EAAAA,EAAAA,EAAH,iHAObE,EAAaF,EAAAA,EAAAA,GAAH,sC,SCXVG,EAAc,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QAC1B,OACI,wBAAKA,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACI,UAACL,EAAD,YACI,SAACH,EAAD,UAAcO,GAAkB,wCAChC,SAACL,EAAD,UAAgBM,MAFHF,EAKxB,KAIR,ECQD,EApBgB,WACd,IAAQjB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACR,GAA8BqB,EAAAA,EAAAA,UAAS,MAAvC,eAAOd,EAAP,KAAgBe,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YHTL,SAAP,mCGUIC,CAAgBC,OAAOzB,IACpB0B,KAAKJ,GACLK,OAAM,SAAAC,GACLpB,QAAQC,OAAO,IAAIC,MAAJ,UAAakB,EAAMC,UACnC,GACJ,GAAE,CAAC7B,KAGF,8BACGO,GAAWA,EAAQuB,OAAS,GAAK,SAACf,EAAD,CAAaR,QAASA,KACrD,wEAGR,C,sBCvBD,SAASwB,EAAmBC,EAAKC,EAASxB,EAAQyB,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOX,GAEP,YADAnB,EAAOmB,EAET,CAEIU,EAAKE,KACPP,EAAQM,GAER/B,QAAQyB,QAAQM,GAAOb,KAAKQ,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAItC,SAAQ,SAAUyB,EAASxB,GACpC,IAAIuB,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMK,GACbR,EAAmBC,EAAKC,EAASxB,EAAQyB,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOa,GACdjB,EAAmBC,EAAKC,EAASxB,EAAQyB,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["services/movieReviewsApi.js","components/ReviewsCard/RewiewsCard.styled.jsx","components/ReviewsCard/ReviewsCard.js","pages/Reviews/Reviews.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export async function getMovieReviews(movieId) {\n  const key = 'f637ff1bcaf74a417438f57fb9f0b1d7';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  \n\n  const response = await fetch(`${url}?api_key=${key}&language=en-US&page=1`);\n  if (response.ok) {\n    const movie = await response.json();\n\n  return movie.results;\n  }\n  return Promise.reject(new Error(`Someting wrong`))\n\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const ReviewAutor = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  text-align: justify;\n`;\n\nexport const RewievList = styled.li`\npadding: 20px;`","import PropTypes from 'prop-types';\n\nimport { ReviewAutor, ReviewContent, RewievList } from './RewiewsCard.styled';\n\nexport const ReviewsCard = ({ results }) => {\n    return (\n        <ul>{results.map(({ id, author, content }) => {\n            return (\n                <RewievList key={id} >\n                    <ReviewAutor>{author ? author : \"There is no information about name\"}</ReviewAutor>\n                    <ReviewContent>{content}</ReviewContent>\n                </RewievList>\n            )\n        }\n        )}\n        </ul>\n    );\n};\n\nReviewsCard.propTypes = {\n    results: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            author: PropTypes.string,\n            content: PropTypes.string,\n         })\n    ),\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {getMovieReviews} from 'services/movieReviewsApi';\nimport { ReviewsCard } from 'components/ReviewsCard/ReviewsCard';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [results, setResults] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(Number(movieId))\n      .then(setResults)\n      .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n      })\n  }, [movieId]);\n\n  return (\n    <>\n      {results && results.length > 0 ? (<ReviewsCard results={results} />) :\n        (<p>No one has left a review for this movie yet</p>)}\n    </>\n  )\n}\n\nexport default Reviews;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","url","fetch","response","ok","json","movie","results","Promise","reject","Error","ReviewAutor","styled","ReviewContent","RewievList","ReviewsCard","map","id","author","content","useParams","useState","setResults","useEffect","getMovieReviews","Number","then","catch","error","message","length","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}