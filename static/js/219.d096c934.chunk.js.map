{"version":3,"file":"static/js/219.d096c934.chunk.js","mappings":"8LAEaA,E,OAAYC,EAAAA,IAAH,0E,SCWtB,EAVe,WACb,OACI,UAACD,EAAD,YACI,uDACJ,SAAC,KAAD,MAIL,C,oGCPYE,EAAOD,EAAAA,EAAAA,GAAH,8FAOJE,EAAQF,EAAAA,EAAAA,GAAH,kFAMLG,GAAOH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mH,SCmBjB,EA7BkB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,QACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,+BACI,SAACN,EAAD,UACKI,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,SAACR,EAAD,WACI,SAACC,EAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACKI,GAAgB,uBAFbD,EADH,OAU5B,C,6HCvBD,aAAO,OAAP,oBAAO,4FACO,mCACA,kDAFP,SAKkBK,MAAM,GAAD,OAHhB,kDAGgB,oBAJhB,qCADP,YAKCC,EALD,QAMQC,GANR,iCAOgBD,EAASE,OAPzB,cAOGC,EAPH,yBASEA,EAAKb,SATP,iCAWEc,QAAQC,OAAO,IAAIC,MAAJ,oBAXjB,mE,wBCEMC,E,OAAQtB,EAAAA,GAAH,uE,SC8BlB,EA1Ba,WACT,OAA8BuB,EAAAA,EAAAA,UAAS,MAAvC,eAAOlB,EAAP,KAAgBmB,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAcA,OAXAC,EAAAA,EAAAA,YAAU,WACND,GAAa,GFZd,WAAP,+BEcQE,GACKC,KAAML,GACNM,OAAM,SAAAC,GACHZ,QAAQC,OAAO,IAAIC,MAAJ,UAAaU,EAAMC,UACrC,IACAC,QAAQP,GAAa,GAC7B,GAAE,KAGC,iCACI,SAACJ,EAAD,4BACCG,IAAa,SAACS,EAAA,EAAD,IACb7B,IAAW,SAAC8B,EAAA,EAAD,CAAW9B,QAASA,MAG3C,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","services/trendsApi.js","pages/Home/Home.styled.jsx","pages/Home/Home.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n      <LoaderBox>\n          <p>Please wait. Is loading...</p>\n      <ColorRing\n              />\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n\n\n//strokeColor=\"#00b4ff\"\n//        strokeWidth=\"5\"\n//        animationDuration=\"0.75\"\n //       width=\"96\"\n //       visible={true}","import styled from \"@emotion/styled\";\nimport { NavLink } from 'react-router-dom';\n\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  margin-left: 20px;\n  text-align: center;\n  \n`;\n\nexport const Movie = styled.li`\n  font-size: 20px;\n  font-weight: 500;\n  padding: 2px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n  &:hover,\n  &:focus {\n    color: #13abde;\n    font-weight: 700;\n  }\n`;","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { List, Movie, Link } from \"./MovieList.styled\"\n\n\n\nconst MovieList = ({ results  }) => {\n    const location = useLocation();\n    \n    return (\n        <>\n            <List>\n                {results.map(({ id, title }) => (\n                    <Movie key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\n                            {title ? title : \"There is no title\"}\n                        </Link>\n                    </Movie>\n                ))}\n            </List>\n        </>\n    )\n}\n\nMovieList.propTypes = {\n    results: PropTypes.arrayOf(\n        PropTypes.shape(\n             {\n       id: PropTypes.number,\n       title: PropTypes.string,\n    }\n         )\n        )\n   \n};\nexport default MovieList;","export async function getTrends() {\n  const key = 'f637ff1bcaf74a417438f57fb9f0b1d7';\n  const url = 'https://api.themoviedb.org/3/trending/movie/day';\n  \n\n  const response = await fetch(`${url}?api_key=${key}`);\n  if (response.ok) {\n    const data = await response.json();\n\n  return data.results;\n  }\n  return Promise.reject(new Error(`Someting wrong`))\n\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  margin-top: 20px;\n  margin-left: 20px;\n  \n`;","import { useState, useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\"; \nimport { getTrends } from \"services/trendsApi\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { Title } from \"./Home.styled\";\n\nconst Home = () => {\n    const [results, setResults] = useState(null);\n    const [isLoading, setIsLoading] = useState(false)\n\n       \n    useEffect(() => {\n        setIsLoading(true)\n        \n        getTrends()\n            .then (setResults)\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n            .finally(setIsLoading(false))\n    }, [])\n    \n    return (\n        <>\n            <Title> Trandy today</Title>\n            {isLoading && <Loader/>}\n            {results && <MovieList results={results}/>}\n        </>\n    )\n}\n\n\nexport default Home;"],"names":["LoaderBox","styled","List","Movie","Link","NavLink","results","location","useLocation","map","id","title","to","state","from","fetch","response","ok","json","data","Promise","reject","Error","Title","useState","setResults","isLoading","setIsLoading","useEffect","getTrends","then","catch","error","message","finally","Loader","MovieList"],"sourceRoot":""}